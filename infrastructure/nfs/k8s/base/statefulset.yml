apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nfs-server
  labels:
    app: nfs-server
spec:
  selector:
    matchLabels:
      run: nfs-server
  replicas: 1
  revisionHistoryLimit: 2
  #strategy:
  #  type: Recreate
  template:
    metadata:
      labels:
        run: nfs-server
    spec:
      terminationGracePeriodSeconds: 20
      initContainers:
      - name: init-nfs-server
        image: busybox:latest
        # create needed folders here:
        # command: [ 'sh', '-c', 'mkdir -p /exports/client01 ; chown -R 999:999 /exports/client01' ]
        command: [ 'sh', '-c', 'mkdir -p /exports/mails' ]
        volumeMounts:
        - name: nfs-backing-storage
          mountPath: '/exports'
          readOnly: false
      containers:
      - name: nfs-server
        # image: itsthenetwork/nfs-server-alpine:12
        # image: gcr.io/google_containers/volume-nfs:0.8
        # image: erichough/nfs-server:2.2.1
        image: nfs-server:latest  # build this from the local Dockerfile
        # need to enable this for minikube, if image is just present in minikube registry, but not remotely:
        imagePullPolicy: IfNotPresent
        #env:
        #- name: NFS_EXPORT_0
        #  value: '/nfs-share/client01 *(rw,insecure,no_subtree_check,no_root_squash)'
        #- name: POSTGRES_DB
        #  valueFrom:
        #    configMapKeyRef:
        #      name: taiga-db-config
        #      key: POSTGRES_DB
        #- name: PGDATA
        #  valueFrom:
        #    configMapKeyRef:
        #      name: taiga-db-config
        #      key: PGDATA
        #- name: POSTGRES_PASSWORD
        #  valueFrom:
        #    secretKeyRef:
        #      name: taiga-db-secrets
        #      key: POSTGRES_PASSWORD
        #- name: POSTGRES_USER
        #  valueFrom:
        #    secretKeyRef:
        #      name: taiga-db-secrets
        #      key: POSTGRES_USER
        ports:
        - name: rpcbind
          containerPort: 111
        - name: nfs
          containerPort: 2049
        - name: mountd
          containerPort: 20048
        #- name: mountd
        #  containerPort: 20048
        #- name: rpcbind
        #  containerPort: 111
        securityContext:
          # privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - name: nfs-server-config
          mountPath: '/etc/exports'
          subPath: 'exports'
          readOnly: true
        - name: nfs-backing-storage
          mountPath: '/exports'
          readOnly: false
        resources:
          requests:
            memory: 8Mi
          limits:
            memory: 256Mi
      volumes:
      - name: nfs-server-config
        configMap:
          name: nfs-server-config
          items:
          - key: 'exports'
            path: 'exports'
      #- name: nfs-backing-storage
      #  persistentVolumeClaim:
      #    claimName: nfs-backing-storage
  volumeClaimTemplates:
  - metadata:
      name: nfs-backing-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 128Mi

